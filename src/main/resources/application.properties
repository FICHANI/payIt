# Always see logs from Spring Boot terminal
logging.level.org.springframework.security=DEBUG
logging.level.com.example.backend=DEBUG

pring.jpa.open-in-view=false
logging.level.org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer=ERROR

openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out cert.pem
spring.jpa.properties.jakarta.persistence.validation.mode=none

# Session management
server.servlet.session.timeout=30m
#server.servlet.session.cookie.http-only=true
#server.servlet.session.cookie.secure=true

# Configure CSRF cookie with SameSite=None and Secure
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.partitioned=true
server.ssl.enabled=false

# Stripe configuration
#stripe.secret-key=sk_test_51Rjgt9PGmqzBvfLpxFrIJYZhdQtLdf8noMpxIx4fXvVFPH2KTnKMif5Wmn0LZNTuQBGEmvI7Yx9im1yVkyOG6dTX00L5gzP7Gk
#stripe.publishable-key=pk_test_51Rjgt9PGmqzBvfLpZUD5E8pQPRMlPWbof7XYhPLzK8sQopU2OJ7cNVTkpvGuFrM4UylRg7TsywrMP1hcQANub9PL00eeOvR7oG

# ========================
# Database Configuration
# ========================
# H2 Database - file-based persistence
spring.datasource.url=jdbc:h2:file:./data/pay_it;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.hibernate.ddl-auto=update

# JPA / Hibernate
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false

# ========================
# Server Configuration
# ========================
server.port=8080
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=lax

# ========================
# Stripe Configuration
# ========================
stripe.secret-key=sk_test_51Rjgt9PGmqzBvfLpxFrIJYZhdQtLdf8noMpxIx4fXvVFPH2KTnKMif5Wmn0LZNTuQBGEmvI7Yx9im1yVkyOG6dTX00L5gzP7Gk
stripe.publishable-key=pk_test_51Rjgt9PGmqzBvfLpZUD5E8pQPRMlPWbof7XYhPLzK8sQopU2OJ7cNVTkpvGuFrM4UylRg7TsywrMP1hcQANub9PL00eeOvR7oG
stripe.currency=usd
stripe.webhook-secret=whsec_...  # For future webhook integration

# Stripe Configuration
stripe.api.key=sk_test_51Rjgt9PGmqzBvfLpxFrIJYZhdQtLdf8noMpxIx4fXvVFPH2KTnKMif5Wmn0LZNTuQBGEmvI7Yx9im1yVkyOG6dTX00L5gzP7Gk
# Spring Security (temporary for development)
spring.security.user.name=admin
spring.security.user.password=adminpass

# ========================
# Security Headers
# ========================
security.headers.hsts=strict
security.headers.content-security-policy=default-src 'self' https://js.stripe.com
security.headers.xss-protection=1; mode=block
security.headers.frame-options=DENY
security.headers.feature-policy=camera 'none'; microphone 'none'

# ========================
# Logging Configuration
# ========================
logging.file.name=logs/login-debug.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.level.root=INFO
logging.level.org.springframework.security=DEBUG
logging.level.com.example.backend=DEBUG
logging.level.com.stripe=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ========================
# Payment Provider Settings
# ========================
payment.test-mode=true
payment.allowed-currencies=USD,ZIG
payment.min-amount=0.50
payment.max-amount=10000.00

# ========================
# CSRF Protection
# ========================
spring.security.csrf.enabled=true
spring.security.csrf.token-repository=cookie

# For local development (HTTP)
server.servlet.session.cookie.same-site=lax

# For production (HTTPS)
server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.secure=true

# For simple cases
spring.mvc.cors.allowed-origins=http://localhost:8080
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE

# Security
spring.security.user.name=admin
spring.security.user.password=adminpass

server.port=${PORT:8080}
server.address=0.0.0.0